import{_ as l,o as i,c as e,O as t}from"./chunks/framework.6d2956c6.js";const m=JSON.parse('{"title":"你不懂JS：作用域与闭包","description":"","frontmatter":{},"headers":[],"relativePath":"scope&closures/toc.md","filePath":"scope&closures/toc.md"}'),a={name:"scope&closures/toc.md"},o=t('<h1 id="你不懂js-作用域与闭包" tabindex="-1">你不懂JS：作用域与闭包 <a class="header-anchor" href="#你不懂js-作用域与闭包" aria-label="Permalink to &quot;你不懂JS：作用域与闭包&quot;">​</a></h1><h2 id="目录" tabindex="-1">目录 <a class="header-anchor" href="#目录" aria-label="Permalink to &quot;目录&quot;">​</a></h2><ul><li>序</li><li>前言</li><li>第一章：什么是作用域？ <ul><li>编译器理论</li><li>理解作用域</li><li>嵌套的作用域</li><li>错误</li></ul></li><li>第二章：词法作用域 <ul><li>词法分析时</li><li>欺骗词法作用域</li></ul></li><li>第三章：函数与块儿作用域 <ul><li>函数中的作用域</li><li>隐藏于普通作用域</li><li>函数作为作用域</li><li>块儿作为作用域</li></ul></li><li>第四章：提升 <ul><li>先有鸡还是先有蛋？</li><li>编译器再次袭来</li><li>函数优先</li></ul></li><li>第五章：作用域闭包 <ul><li>启示</li><li>事实真相</li><li>现在我能看到了</li><li>循环 + 闭包</li><li>模块</li></ul></li><li>附录A：动态作用域</li><li>附录B：填补块儿作用域</li><li>附录C：词法 this</li><li>附录D：鸣谢</li></ul>',3),s=[o];function c(r,_,n,u,d,h){return i(),e("div",null,s)}const f=l(a,[["render",c]]);export{m as __pageData,f as default};
